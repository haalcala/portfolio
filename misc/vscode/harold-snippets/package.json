{
  "name": "harold-snippets",
  "displayName": "harold-snippets",
  "description": "Harold's Snippets Collection",
  "publisher": "HaroldAlcala",
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.76.0"
  },
  "categories": [
    "Other",
    "Snippets"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onWebviewPanel:catCoding"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId == markdown || resourceLangId == html",
          "command": "harold-extension.catCoding.start",
          "alt": "markdown.showPreviewToSide",
          "group": "navigation"
        }
      ]
    },
    "commandPalette": [
      {
        "command": "harold-extension.helloWorld",
        "when": "editorHasSelection",
        "group": "1_modification@1"
      }
    ],
    "viewsWelcome": [
      {
        "submenu": "harold-extension.helloWorld",
        "view": "explorer",
        "contents": "In order to use git features, you can open a folder containing a git repository or clone from a URL.\n[Open Folder](command:vscode.openFolder)\n[Clone Repository](command:git.clone)\nTo learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).",
        "when": "workbenchState == empty"
      }
    ],
    "walkthroughs": [
      {
        "submenu": "harold-extension.helloWorld",
        "id": "sample",
        "title": "Sample",
        "description": "A sample walkthrough",
        "steps": [
          {
            "id": "runcommand",
            "title": "Run Command",
            "description": "This step will run a command and check off once it has been run.\n[Run Command](command:getting-started-sample.runCommand)",
            "media": {
              "image": "media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onCommand:getting-started-sample.runCommand"
            ]
          },
          {
            "id": "changesetting",
            "title": "Change Setting",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          }
        ]
      }
    ],
    "icons": {
      "distro-ubuntu": {
        "description": "Ubuntu icon",
        "default": {
          "fontPath": "./distroicons.woff",
          "fontCharacter": "\\E001"
        }
      }
    },
    "commands": [
      {
        "command": "harold-extension.helloWorld",
        "title": "HAA Hello World"
      },
      {
        "command": "harold-extension.echo_selection",
        "title": "HAA Echo selected"
      },
      {
        "command": "harold-extension.quickpick",
        "title": "HAA Hello World Quick Pick"
      },
      {
        "command": "harold-extension.catCoding.start",
        "title": "Start new cat coding session",
        "category": "HAA Cat Coding"
      },
      {
        "command": "harold-extension.catCoding.doRefactor",
        "title": "Cat coding refactoring",
        "category": "HAA Cat Coding"
      },
      {
        "command": "harold-extension.myAmazingExtension.persistWorkspaceData",
        "title": "HAA persistWorkspaceData"
      },
      {
        "command": "harold-extension.myAmazingExtension.persistGlobalData",
        "title": "HAA persistGlobalData"
      }
    ],
    "snippets": [
      {
        "language": "html",
        "path": "./snippets/my-snippets.code-snippets"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.76.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "eslint": "^8.34.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5",
    "ts-loader": "^9.4.2",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1",
    "@vscode/test-electron": "^2.2.3"
  }
}